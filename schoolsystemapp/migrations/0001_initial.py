# Generated by Django 3.1.2 on 2020-11-08 12:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('STUDENT', 'Student'), ('TEACHER', 'Teacher'), ('ADMIN', 'Admin')], default='STUDENT', max_length=50, verbose_name='Type')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ListOfSchool',
            fields=[
                ('school_code', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('school_name', models.CharField(max_length=255, unique=True)),
                ('account_name', models.CharField(blank=True, default=None, max_length=258)),
                ('account_number', models.CharField(blank=True, default=None, max_length=15)),
                ('bank_name', models.CharField(blank=True, default=None, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_code', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('payment_class', models.CharField(max_length=5)),
                ('term', models.CharField(choices=[('1', 'FIRST'), ('2', 'SECOND'), ('3', 'THIRD')], max_length=1)),
                ('amount', models.CharField(max_length=128)),
                ('deadline', models.DateField()),
                ('breakdown', models.FileField(default=None, upload_to='payment-breakdowm/%Y/%m/%d/')),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
            ],
            options={
                'unique_together': {('school_code', 'payment_code')},
            },
        ),
        migrations.CreateModel(
            name='StudentMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('sender', models.CharField(blank=True, default=None, max_length=258)),
                ('recipient', models.IntegerField()),
                ('subject', models.CharField(blank=True, default=None, max_length=258)),
                ('message', models.TextField()),
                ('school_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
            ],
        ),
        migrations.CreateModel(
            name='FeedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachments', models.FileField(default=None, upload_to='message_attachments/%Y/%m/%d/')),
                ('feed', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.studentmessage')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('schoolsystemapp.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('schoolsystemapp.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('schoolsystemapp.user',),
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textbook_class', models.CharField(max_length=5)),
                ('textbook', models.FileField(default=None, upload_to='textbooks/%Y/%m/%d/')),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
            ],
            options={
                'unique_together': {('school_code', 'textbook_class')},
            },
        ),
        migrations.CreateModel(
            name='TeacherDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_code', models.CharField(max_length=8, unique=True)),
                ('birth_date', models.DateField()),
                ('sex', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=1)),
                ('email_address_2', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(max_length=10)),
                ('phone_number_2', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=256)),
                ('city', models.CharField(max_length=128)),
                ('state', models.CharField(max_length=128)),
                ('state_of_origin', models.CharField(max_length=128)),
                ('nationality', models.CharField(max_length=128)),
                ('subject_1', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_class_1', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_2', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_class_2', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_3', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_class_3', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_4', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_class_4', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_5', models.CharField(blank=True, max_length=128, null=True)),
                ('subject_class_5', models.CharField(blank=True, max_length=128, null=True)),
                ('national_id_card_no', models.CharField(max_length=15, null=True)),
                ('employment_start_date', models.DateField()),
                ('no_active_terms', models.PositiveSmallIntegerField(default=0)),
                ('employment_end_date', models.DateField(blank=True, null=True)),
                ('class_teacher', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=3)),
                ('class_teachers_class', models.CharField(blank=True, max_length=5, null=True)),
                ('teacher_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=8)),
                ('theme_color', models.CharField(default='darkgreen', max_length=128)),
                ('admin', models.CharField(blank=True, max_length=128, null=True)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_code', models.CharField(max_length=8, unique=True)),
                ('current_class', models.CharField(max_length=5)),
                ('current_term', models.CharField(choices=[('1', 'FIRST'), ('2', 'SECOND'), ('3', 'THIRD')], max_length=1)),
                ('sex', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=1)),
                ('birth_date', models.DateField()),
                ('birth_place', models.CharField(max_length=128)),
                ('state_of_origin', models.CharField(max_length=128)),
                ('email_address_2', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(max_length=10)),
                ('phone_number_2', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=256)),
                ('city', models.CharField(max_length=128)),
                ('state', models.CharField(max_length=128)),
                ('nationality', models.CharField(max_length=128)),
                ('fathers_name', models.CharField(max_length=256)),
                ('mothers_name', models.CharField(max_length=256)),
                ('mothers_maiden_name', models.CharField(max_length=256)),
                ('date_of_admission', models.DateField()),
                ('dormitory', models.CharField(blank=True, max_length=256, null=True)),
                ('student_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=8)),
                ('no_active_terms', models.PositiveSmallIntegerField(default=0)),
                ('no_terms_remaining', models.PositiveSmallIntegerField(default=0)),
                ('expected_graduation', models.DateField()),
                ('registration_number', models.CharField(max_length=128)),
                ('education_id', models.CharField(blank=True, max_length=128, null=True)),
                ('theme_color', models.CharField(default='darkgreen', max_length=128)),
                ('admin', models.CharField(blank=True, max_length=128, null=True)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='GradeBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=256)),
                ('student_class', models.CharField(max_length=5)),
                ('term', models.CharField(choices=[('1', 'FIRST'), ('2', 'SECOND'), ('3', 'THIRD')], max_length=1)),
                ('midterm_test', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_midterm_test', models.DateField(blank=True, null=True)),
                ('exam_result', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_exam_result', models.DateField(blank=True, null=True)),
                ('grade', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('date_grade', models.DateField(blank=True, null=True)),
                ('teacher_code', models.CharField(blank=True, max_length=8, null=True)),
                ('student_class_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=8)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('student_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('school_code', 'subject', 'student_class', 'term', 'student_code')},
            },
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_class', models.CharField(max_length=5)),
                ('class_start_time', models.TimeField()),
                ('monday', models.CharField(blank=True, max_length=256)),
                ('tuesday', models.CharField(blank=True, max_length=256)),
                ('wednesday', models.CharField(blank=True, max_length=256)),
                ('thursday', models.CharField(blank=True, max_length=256)),
                ('friday', models.CharField(blank=True, max_length=256)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
            ],
            options={
                'unique_together': {('student_class', 'class_start_time', 'school_code')},
            },
        ),
        migrations.CreateModel(
            name='AdminDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_color', models.CharField(default='darkgreen', max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.admin')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherSchoolRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_code', models.CharField(max_length=8)),
                ('no_active_terms', models.PositiveSmallIntegerField()),
                ('date_of_employment', models.DateField()),
                ('teacher_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=8)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.teacher')),
            ],
            options={
                'unique_together': {('user', 'teacher_code', 'school_code')},
            },
        ),
        migrations.CreateModel(
            name='SubjectDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=256)),
                ('subject_class', models.CharField(max_length=5)),
                ('day', models.CharField(choices=[('MON', 'MONDAY'), ('TUES', 'TUESDAY'), ('WED', 'WEDNESDAY'), ('THURS', 'THURSDAY'), ('FRI', 'FRIDAY')], max_length=5)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('teacher_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.teacher')),
            ],
            options={
                'unique_together': {('subject', 'subject_class', 'day', 'teacher_code', 'start_time', 'school_code')},
            },
        ),
        migrations.CreateModel(
            name='StudentSchoolRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_code', models.CharField(max_length=8)),
                ('no_active_terms', models.PositiveSmallIntegerField()),
                ('date_of_admission', models.DateField()),
                ('registration_number', models.CharField(max_length=128)),
                ('student_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=8)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.student')),
            ],
            options={
                'unique_together': {('user', 'student_code', 'school_code')},
            },
        ),
        migrations.CreateModel(
            name='StudentPaymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('status', models.CharField(max_length=128)),
                ('invoice_number', models.CharField(max_length=128)),
                ('invoice', models.FileField(default=None, upload_to='invoices/%Y/%m/%d/')),
                ('payment_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.payment')),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('student_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.student')),
            ],
            options={
                'unique_together': {('student_code', 'payment_code')},
            },
        ),
        migrations.CreateModel(
            name='GradeAverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_class', models.CharField(max_length=5)),
                ('term', models.CharField(choices=[('1', 'FIRST'), ('2', 'SECOND'), ('3', 'THIRD')], max_length=1)),
                ('no_of_subjects', models.PositiveSmallIntegerField(default=0)),
                ('grade_total', models.PositiveSmallIntegerField(default=0)),
                ('percentage', models.PositiveSmallIntegerField(default=0)),
                ('school_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('student_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.student')),
            ],
            options={
                'unique_together': {('school_code', 'student_code', 'student_class', 'term')},
            },
        ),
        migrations.CreateModel(
            name='ClassAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_code', models.CharField(default=None, max_length=8)),
                ('date', models.DateField()),
                ('attendance', models.SmallIntegerField(default=5)),
                ('school_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.listofschool')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolsystemapp.student')),
            ],
            options={
                'unique_together': {('student_id', 'date')},
            },
        ),
    ]
